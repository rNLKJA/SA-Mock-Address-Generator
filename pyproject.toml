[build-system]
requires = ["setuptools>=45", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "sa-mock-address-generator"
version = "1.0.0"
authors = [
    {name = "rNLKJA", email = "contact@rnlkja.com"},
]
description = "Generate realistic South Australian addresses with customizable distribution parameters based on ABS demographic data"
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.7"
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Scientific/Engineering :: GIS",
    "Topic :: Scientific/Engineering :: Information Analysis",
    "Topic :: Utilities",
    "Topic :: Database",
    "Typing :: Typed",
]
keywords = [
    "address", "generator", "south australia", "mock data", "fake data",
    "geocoding", "socioeconomic", "remoteness", "testing", "abs", "australia",
    "demographics", "geospatial", "data science"
]
dependencies = [
    "pandas>=2.0.0",
    "numpy>=1.24.0",
    "googlemaps>=4.10.0",
    "python-dotenv>=1.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "build>=0.10.0",
    "twine>=4.0.0",
]
test = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
]
docs = [
    "sphinx>=5.0.0",
    "sphinx-rtd-theme>=1.0.0",
]

[project.urls]
"Homepage" = "https://github.com/rNLKJA/sa-mock-address-generator"
"Bug Reports" = "https://github.com/rNLKJA/sa-mock-address-generator/issues"
"Source" = "https://github.com/rNLKJA/sa-mock-address-generator"
"Documentation" = "https://github.com/rNLKJA/sa-mock-address-generator#readme"

[project.scripts]
sa-generate-addresses = "sa_mock_address_generator.cli:main"
sa-lookup-address = "sa_mock_address_generator.lookup_cli:main"

[tool.setuptools.packages.find]
where = ["."]
include = ["sa_mock_address_generator*"]

[tool.setuptools.package-data]
sa_mock_address_generator = ["data/*.csv", "data/*.json"]

# Black code formatting
[tool.black]
line-length = 88
target-version = ['py37', 'py38', 'py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

# Pytest configuration
[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]

# Coverage configuration
[tool.coverage.run]
source = ["sa_mock_address_generator"]
omit = [
    "*/tests/*",
    "*/test_*.py",
    "setup.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

# MyPy type checking
[tool.mypy]
python_version = "3.7"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "googlemaps.*",
    "pandas.*",
    "numpy.*",
]
ignore_missing_imports = true
